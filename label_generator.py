import os
import pandas as pd
import numpy as np
import csv
from tqdm import tqdm

# Get the directory for the face dataset
faces_folder = r"D:\clean_dataset"

# List all the folder inside the face folder
names = list(os.listdir(faces_folder))
print(names)

# Label mapping
names_dict = {}
for id,name in enumerate(names):
    if '.csv' not in name: # exclude label previous label file, if exists
        names_dict[id] = name

# name with id mapping
print(names_dict)

def row_generator(folder_list,names_dict):
    '''
    Generator that yield every file_path for every images, corresponding to its folder name and id
    '''
    for folder in folder_list:
        for id,name in names_dict.items():
            sub_dir = os.path.join(folder,name)
            if os.path.exists(sub_dir):
                for filename in os.listdir(sub_dir):
                    file_path = os.path.join(sub_dir,filename)
                    yield file_path,name,id 

row_gen = row_generator([faces_folder],names_dict)

image_counter = 0
try:
    while True:
        # Attempt to get the next item
        next_item = next(row_gen)
        image_counter += 1
        #print(next_item)
except StopIteration:
    print(f"End of iterator reached with {image_counter} images.")
    
# PATH to save the label.csv
csv_file_path = os.path.join(faces_folder, 'label.csv')

# Open the CSV file in write mode
with open(csv_file_path, 'w', newline='') as csv_file:
    # Create a CSV writer
    csv_writer = csv.writer(csv_file)

    # Write the header to the CSV file
    csv_writer.writerow(['filepath', 'label', 'id'])

    # Iterate over the rows generated by 'row_generator'
    row_gen = row_generator([faces_folder], names_dict)
    for item in tqdm(row_gen):
        # Write each row to the CSV file
        csv_writer.writerow([item[0], item[1], item[2]])